{"ast":null,"code":"var _jsxFileName = \"/home/tuba/Work-Folder/MTechub-Assigned Task/StripePaymentMethod_implementation/src/Components/PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\nexport default function PaymentForm() {\n  _s();\n\n  const [success, setSuccess] = React.useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:3001/payment\", {\n          amount: 1000,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You just bought a book \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_s(PaymentForm, \"3M65JtgjWGh1mYAp6u5p5vuuMcA=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["CardElement","useElements","useStripe","axios","React","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","success","setSuccess","useState","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message"],"sources":["/home/tuba/Work-Folder/MTechub-Assigned Task/StripePaymentMethod_implementation/src/Components/PaymentForm.js"],"sourcesContent":["\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nconst CARD_OPTIONS = {\n\ticonStyle: \"solid\",\n\tstyle: {\n\t\tbase: {\n\t\t\ticonColor: \"#c4f0ff\",\n\t\t\tcolor: \"#fff\",\n\t\t\tfontWeight: 500,\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n\t\t\tfontSize: \"16px\",\n\t\t\tfontSmoothing: \"antialiased\",\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\n\t\t},\n\t\tinvalid: {\n\t\t\ticonColor: \"#ffc7ee\",\n\t\t\tcolor: \"#ffc7ee\"\n\t\t}\n\t}\n}\n\n\nexport default function PaymentForm(){\n\n   const [success,setSuccess] = React.useState(false)\n   const stripe = useStripe()\n   const elements = useElements()\n\n   const handleSubmit = async (e)=>{\n    e.preventDefault()\n    const {error,paymentMethod} = await stripe.createPaymentMethod({\n        type:\"card\",\n        card: elements.getElement(CardElement)\n    })\n\n     if(!error){\n        try{\n           const {id} = paymentMethod\n           const response = await axios.post(\"http://localhost:3001/payment\",{\n            amount:1000,\n            id\n           })\n         \n           if(response.data.success){\n            console.log(\"successful payment\")\n            setSuccess(true)\n           }\n\n        }catch(error){\n            console.log(\"Error\",error)\n        }\n     }else{\n        console.log(error.message)\n     }\n\n   }\n    \n   return(<>\n     {!success?\n     <form onSubmit={handleSubmit}>\n       <fieldset className=\"FormGroup\">\n          <div className=\"FormRow\"> \n          <CardElement options={CARD_OPTIONS}/>\n          </div>\n       </fieldset>\n        <button>\n         Pay\n        </button>\n     </form>\n   :\n   <div>\n      <h2>You just bought a book </h2>\n    \n   </div>\n     }\n     \n   </>)\n}"],"mappings":";;;AACA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,yBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG;EACpBC,SAAS,EAAE,OADS;EAEpBC,KAAK,EAAE;IACNC,IAAI,EAAE;MACLC,SAAS,EAAE,SADN;MAELC,KAAK,EAAE,MAFF;MAGLC,UAAU,EAAE,GAHP;MAILC,UAAU,EAAE,yCAJP;MAKLC,QAAQ,EAAE,MALL;MAMLC,aAAa,EAAE,aANV;MAOL,qBAAqB;QAAEJ,KAAK,EAAE;MAAT,CAPhB;MAQL,iBAAiB;QAAEA,KAAK,EAAE;MAAT;IARZ,CADA;IAWNK,OAAO,EAAE;MACRN,SAAS,EAAE,SADH;MAERC,KAAK,EAAE;IAFC;EAXH;AAFa,CAArB;AAqBA,eAAe,SAASM,WAAT,GAAsB;EAAA;;EAElC,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBd,KAAK,CAACe,QAAN,CAAe,KAAf,CAA7B;EACA,MAAMC,MAAM,GAAGlB,SAAS,EAAxB;EACA,MAAMmB,QAAQ,GAAGpB,WAAW,EAA5B;;EAEA,MAAMqB,YAAY,GAAG,MAAOC,CAAP,IAAW;IAC/BA,CAAC,CAACC,cAAF;IACA,MAAM;MAACC,KAAD;MAAOC;IAAP,IAAwB,MAAMN,MAAM,CAACO,mBAAP,CAA2B;MAC3DC,IAAI,EAAC,MADsD;MAE3DC,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoB9B,WAApB;IAFqD,CAA3B,CAApC;;IAKC,IAAG,CAACyB,KAAJ,EAAU;MACP,IAAG;QACA,MAAM;UAACM;QAAD,IAAOL,aAAb;QACA,MAAMM,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,IAAN,CAAW,+BAAX,EAA2C;UACjEC,MAAM,EAAC,IAD0D;UAEjEH;QAFiE,CAA3C,CAAvB;;QAKA,IAAGC,QAAQ,CAACG,IAAT,CAAclB,OAAjB,EAAyB;UACxBmB,OAAO,CAACC,GAAR,CAAY,oBAAZ;UACAnB,UAAU,CAAC,IAAD,CAAV;QACA;MAEH,CAZD,CAYC,OAAMO,KAAN,EAAY;QACTW,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBZ,KAApB;MACH;IACH,CAhBD,MAgBK;MACFW,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,OAAlB;IACF;EAEF,CA3BD;;EA6BA,oBAAO;IAAA,UACJ,CAACrB,OAAD,gBACD;MAAM,QAAQ,EAAEK,YAAhB;MAAA,wBACE;QAAU,SAAS,EAAC,WAApB;QAAA,uBACG;UAAK,SAAS,EAAC,SAAf;UAAA,uBACA,QAAC,WAAD;YAAa,OAAO,EAAEjB;UAAtB;YAAA;YAAA;YAAA;UAAA;QADA;UAAA;UAAA;UAAA;QAAA;MADH;QAAA;QAAA;QAAA;MAAA,QADF,eAMG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANH;IAAA;MAAA;MAAA;MAAA;IAAA,QADC,gBAYH;MAAA,uBACG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA;EAbO,iBAAP;AAoBF;;GAvDuBW,W;UAGNd,S,EACED,W;;;KAJIe,W"},"metadata":{},"sourceType":"module"}